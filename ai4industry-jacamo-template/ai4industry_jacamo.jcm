/*
    ai4industry_jacamo
    ---------------------------

    JaCaMo Application File

    This file defines the initial state of the MAS (initial agents, environment, organisation, ....)

    (see jacamo/doc/jcm.html for more information about what can be defined in this file)

    JaCaMo 0.9-SNAPSHOT
    June 05, 2020 - 18:44:14
*/

mas ai4industry_jacamo {

//    Agent for testing the ldfu artifact and the generated belief base
//    agent tester_agent {
//           join: test_ldfu
//           focus: test_ldfu.ldfu_spider
//     }


    // Agent acquiring the KG with the ldfu_spider artifact
    agent ldfu_spider {
          beliefs: base("https://ci.mines-stetienne.fr/kg/")
          goals: start // initial goal. Comment to make agent inactive
          join: test_ldfu
          focus: test_ldfu.ldfu_spider
    }


      // agent leubot_agent

   agent leubot_agent {
          beliefs:  name(leubot1) // name of the controlled robotic arm
                    base("https://ci.mines-stetienne.fr/kg/") // node where to find the index.ttl
                    api_key("KEYAPIS") // api key for using the leubot robot. Fix it
          goals: start // initial goal. Comment to make agent inactive
          join: test_ldfu
          focus: test_ldfu.ldfu_spider
    }

   // Agent for providing cups and packages
    agent cup_provider {
          beliefs: base("https://ci.mines-stetienne.fr/kg/") // node where to find the index.ttl
                    name(cupProvider) // name of the controled thing
          goals: start // initial goal. Comment to make agent inactive
          join: test_ldfu
          focus: test_ldfu.ldfu_spider
    }

    // Agent for providing cups and packages
     agent dairy_product_provider {
           beliefs:   base("https://ci.mines-stetienne.fr/kg/") // node where to find the index.ttl
                     name(dairyProductProvider) // name of the controled thing
           goals: start // initial goal. Comment to make agent inactive
           join: test_ldfu
           focus: test_ldfu.ldfu_spider
     }

    workspace test_ldfu  { // workspace where the artifact ldfu_spider is created
          // creates Linked-Data-Fu spider, that will crawl the KG as
          // specified in the Linked Data program "get.n3"
          artifact ldfu_spider :      org.hypermedea.LinkedDataFuSpider("get.n3")
    }

    //This is for the use of JaCaMoRest for communication among agents
    //-------------
    // host1:
    // - ngrok http 8080
    // OR
    // - ssh -R 80:localhost:8080 serveo.net
    // --> note the returned URL, in host1.jcm as follows:
    // platform: jacamo.rest.JCMRest("--rest-port 8080 --registerURL http://7a72c6d78d1b.ngrok.io")
    // -----------------
    // host2:
    // - ngrok http 8081
    // OR
    // - ssh -R 80:localhost:8081 serveo.net
    // --> note the returned URL + the one returned for host1 in host2.jcm as follows:
    // platform: jacamo.rest.JCMRest("--connect http://7a72c6d78d1b.ngrok.io --registerURL https://igitur.serveousercontent.com/ --rest-port 8081")
    // -----------------
    // host3:
    // - ngrok http 8082
    // OR
    // - ssh -R 80:localhost:8082 serveo.net
    // --> note the returned URL + the one returned for host1 in host3.jcm as follows:
    // platform: jacamo.rest.JCMRest("--connect http://7a72c6d78d1b.ngrok.io --registerURL https://igitur.serveousercontent.com/ --rest-port 8082")
    //
    //platform: jacamo.rest.JCMRest("--connect URLofTheANS --registerURL URLofTheTunneledHost --rest-port PortofTheTunneledHost")

    platform: jacamo.rest.JCMRest("--rest-port 8080")
}
